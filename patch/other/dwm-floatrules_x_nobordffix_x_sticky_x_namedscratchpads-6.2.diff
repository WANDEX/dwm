diff -u dwm/dwm.c dwmnew/dwm.c
--- dwm/dwm.c	2020-03-01 19:10:06.680155097 +1300
+++ dwmnew/dwm.c	2020-03-01 19:28:26.793564016 +1300
@@ -92,7 +93,9 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;
+	int floatborderpx;
+	char scratchkey;
 	Client *next;
 	Client *snext;
 	Monitor *mon;
@@ -139,6 +140,9 @@
 	unsigned int tags;
 	int isfloating;
 	int monitor;
+	int floatx, floaty, floatw, floath;
+	int floatborderpx;
+	const char scratchkey;
 } Rule;

 /* function declarations */
@@ -299,9 +305,29 @@ applyrules(Client *c)
 		{
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
+			c->scratchkey = r->scratchkey;
+			c->floatborderpx = r->floatborderpx;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
 			if (m)
 				c->mon = m;
+			if (r->isfloating) {
+				if (r->floatw == -1)
+					c->w = c->mon->mw - (c->floatborderpx * 2);
+				else
+					c->w = r->floatw;
+				if (r->floath == -1)
+					c->h = c->mon->mh - (c->floatborderpx * 2) - (drw->fonts->h + 2) * 2;
+				else // (drw->fonts->h + 2) - bar height
+					c->h = r->floath;
+				if (r->floatx == -1)
+					c->x = c->mon->mx + c->mon->mw / 2 - c->w / 2 - c->floatborderpx;
+				else // (c->mon->mx) - for multi-monitor setup
+					c->x = c->mon->mx + r->floatx;
+				if (r->floaty == -1)
+					c->y = c->mon->mh / 2 - c->h / 2 - c->floatborderpx;
+				else
+					c->y = r->floaty;
+			}
		}
	}
	if (ch.res_class)
@@ -1049,7 +1049,12 @@ manage(Window w, XWindowAttributes *wa)
		&& (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
	c->bw = borderpx;

-	wc.border_width = c->bw;
+	if (c->isfullscreen)
+		wc.border_width = 0;
+	else if (c->isfloating)
+		wc.border_width = c->floatborderpx;
+	else
+		wc.border_width = c->bw;
 	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, scheme[SchemeNorm][ColBorder].pixel);
 	configure(c); /* propagates border_width, if size doesn't change */
@@ -1281,7 +1299,20 @@
 	c->oldy = c->y; c->y = wc.y = y;
 	c->oldw = c->w; c->w = wc.width = w;
 	c->oldh = c->h; c->h = wc.height = h;
-	wc.border_width = c->bw;
+	if (c->isfullscreen)
+		wc.border_width = 0;
+	else if (c->isfloating)
+		wc.border_width = c->floatborderpx;
+	else
+		wc.border_width = c->bw;
+	if (((nexttiled(c->mon->clients) == c && !nexttiled(c->next))
+	    || &monocle == c->mon->lt[c->mon->sellt]->arrange)
+	    && !c->isfullscreen && !c->isfloating
+	    && NULL != c->mon->lt[c->mon->sellt]->arrange) {
+		c->w = wc.width += c->bw * 2;
+		c->h = wc.height += c->bw * 2;
+		wc.border_width = 0;
+	}
 	XConfigureWindow(dpy, c->win, CWX|CWY|CWWidth|CWHeight|CWBorderWidth, &wc);
 	configure(c);
 	XSync(dpy, False);
