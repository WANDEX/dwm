--- a/config.def.h	2020-10-23 20:01:28.777658089 +0300
+++ b/config.def.h	2020-10-23 19:37:58.398732419 +0300
@@ -8,21 +9,27 @@ static int showsystray              = 1;
 static char statussep               = ';';  /* separator between status bars */

 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
-static const unsigned int snap      = 32;       /* snap pixel */
-static const int showbar            = 1;        /* 0 means no bar */
-static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
-static const char *colors[][3]      = {
-	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+static unsigned int borderpx        = 2;    /* border pixel of windows */
+static unsigned int snap            = 2;    /* snap pixel */
+static int showbar                  = 1;    /* 0 means no bar */
+static int topbar                   = 1;    /* 0 means bottom bar */
+static const char *fonts[] = {
+       "monospace:size=8",
+       "JoyPixels:pixelsize=8:antialias=true:autohint=true",
+       "FontAwesome:pixelsize=8",
+};
+static char dmenufont[]             = "monospace:size=8";
+static char normbgcolor[]           = "#3E494C";
+static char normfgcolor[]           = "#E0E5E6";
+static char selfgcolor[]            = "#32393A";
+static char selbgcolor[]            = "#97A6AA";
+static char normbordercolor[]       = "#32393A";
+static char selbordercolor[]        = "#97A6AA";
+#include "patch/include/config/termcolors.h"
+static char *colors[][3] = {
+       /*               fg           bg           border   */
+       [SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
+       [SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
 };

 /* tagging */
@@ -37,15 +54,22 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+    /* class        instance    title           tgmask isf mon float x,y,w,h   fbrdrpx skey*/
+    { NULL, "telegram-desktop", NULL,           1 << 8, 0,  1, 0,0,0,0,             2,  0  },
+    { NULL, "pulseeffects",     NULL,           1 << 7, 0,  1, 0,0,0,0,             2,  0  },
+    { NULL, "google-chrome",    NULL,           1 << 6, 0, -1, 0,0,0,0,             2,  0  },
+    { "mpv",    "MPVstream",    NULL,           1 << 5, 0,  1, 0,0,0,0,             2,  0  },
+    { NULL,         NULL,       "scratchpad",   0,      1, -1, -1,-1,1200,700,      2, 't' },
+    { NULL,         NULL,       "calc",         0,      1, -1, -1,-1,400,600,       4, 'c' },
+    { NULL,         NULL,       "muse",         0,      1, -1, 0,8,-1,-1,           0, 'm' },
+    { NULL,       "opaque",     "pomodoro",     0,      1, -1, -1,-1,1200,700,      2, 'p' },
+    { NULL,       "opaque",     "drop",         0,      1, -1, 0,8,-1,888,          0, 'd' },
 };

 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
-static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static float mfact     = 0.5;   /* factor of master area size [0.05..0.95] */
+static int nmaster     = 1;     /* number of clients in master area */
+static int resizehints = 1;     /* 1 means respect size hints in tiled resizals */

 #include "patch/include/layout/bottomstack.c"
 #include "patch/include/layout/centeredmaster.c"
@@ -78,9 +98,40 @@ static const Layout layouts[] = {

 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbordercolor, "-sf", selfgcolor, NULL };
 static const char *termcmd[]  = { "st", NULL };

+/*First arg only serves to match against key in rules*/
+static const char *sp_term[] = {"t", "st", "-t", "scratchpad", NULL};
+static const char *sp_calc[] = {"c", "st", "-t", "calc", "-f", "monospace:size=16", "-e", "bc", "-lq", NULL };
+static const char *sp_muse[] = {"m", "st", "-t", "muse", "-e", "ncmpcpp", NULL };
+static const char *sp_pmdr[] = {"p", "st", "-t", "pomodoro", "-n", "opaque", "-e", "pmdr", NULL };
+static const char *sp_drop[] = {"d", "st", "-t", "drop", "-n", "opaque", NULL };
+
+/* Xresources preferences to load at startup */
+ResourcePref resources[] = {
+	//{ "systraypinning",             INTEGER,   &systraypinning                  },
+	//{ "systrayspacing",             INTEGER,   &systrayspacing                  },
+	//{ "systraypinningfailfirst",    INTEGER,   &systraypinningfailfirst         },
+	//{ "showsystray",                INTEGER,   &showsystray                     },
+	//{ "statussep",                  STRING,    &statussep                       },
+	{ "borderpx",                   INTEGER,   &borderpx                        },
+	{ "snap",                       INTEGER,   &snap                            },
+	{ "showbar",                    INTEGER,   &showbar                         },
+	{ "topbar",                     INTEGER,   &topbar                          },
+	{ "dmenufont",                  STRING,    &dmenufont                       },
+	{ "normbgcolor",                STRING,    &normbgcolor                     },
+	{ "normfgcolor",                STRING,    &normfgcolor                     },
+	{ "selbgcolor",                 STRING,    &selbgcolor                      },
+	{ "selfgcolor",                 STRING,    &selfgcolor                      },
+	{ "normbordercolor",            STRING,    &normbordercolor                 },
+	{ "selbordercolor",             STRING,    &selbordercolor                  },
+	{ "mfact",                      FLOAT,     &mfact                           },
+	{ "nmaster",                    INTEGER,   &nmaster                         },
+	{ "resizehints",                INTEGER,   &resizehints                     },
+	{ "termcolor",                  STRING,    &termcolor                       },
+};
+
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
@@ -118,7 +160,13 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_Escape, quit,           {1} },
+	{ MODKEY|ShiftMask|ControlMask, XK_Escape, quit,           {0} },
+	{ MODKEY,                       XK_grave,  togglescratch,  {.v = sp_term } },
+	{ MODKEY,                       XK_F3,     togglescratch,  {.v = sp_calc } },
+	{ MODKEY|ShiftMask,             XK_m,      togglescratch,  {.v = sp_muse } },
+	{ MODKEY,                       XK_p,      togglescratch,  {.v = sp_pmdr } },
+	{ MODKEY,                       XK_space,  togglescratch,  {.v = sp_drop } },
 };

 /* button definitions */
